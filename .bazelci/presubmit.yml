---
aspects_flags: &aspects_flags
  - "--config=rustfmt"
  - "--config=clippy"
min_rust_version_shell_commands: &min_rust_version_shell_commands
  - sed -i 's|^rust_register_toolchains(|rust_register_toolchains(versions = ["1.59.0"],\n|' WORKSPACE.bazel
nightly_flags: &nightly_flags
  - "--//rust/toolchain/channel=nightly"
nightly_aspects_flags: &nightly_aspects_flags
  - "--//rust/toolchain/channel=nightly"
  - "--config=rustfmt"
  - "--config=clippy"
single_rust_channel_targets: &single_rust_channel_targets
  - "--"
  - "//..."
  # These tests are expected to fail as they require both a nightly and stable toolchain.
  - "-//test/unit/channel_transitions/..."
default_linux_targets: &default_linux_targets
  - "--"
  - "//..."
default_macos_targets: &default_macos_targets
  - "--"
  - "//..."
default_windows_targets: &default_windows_targets
  - "--" # Allows negative patterns; hack for https://github.com/bazelbuild/continuous-integration/pull/245
  - "//..."
  - "-//test/proto/..."
  - "-//test/unit/pipelined_compilation/..."
crate_universe_vendor_example_targets: &crate_universe_vendor_example_targets
  - "//vendor_external:crates_vendor"
  - "//vendor_local_manifests:crates_vendor"
  - "//vendor_local_pkgs:crates_vendor"
  - "//vendor_remote_manifests:crates_vendor"
  - "//vendor_remote_pkgs:crates_vendor"
crate_universe_unnamed_vendor_example_targets: &crate_universe_unnamed_vendor_example_targets
  - "//vendor_remote_manifests:crates_vendor"
  - "//vendor_remote_pkgs:crates_vendor"
coverage_validation_post_shell_commands: &coverage_validation_post_shell_commands
  - |
    grep -q '^SF:.*\.rs$' bazel-out/_coverage/_coverage_report.dat \
    || { 1>&2 echo "Failed to find any Rust coverage" \
      ; 1>&2 cat bazel-out/_coverage/_coverage_report.dat \
      ; exit 1 \
      ; }
tasks:
  rust_analyzer_tests_windows:
    name: Rust-Analyzer Tests
    platform: windows
    run_flags:
      - "--enable_runfiles" # this is not enabled by default on windows and is necessary for the cargo build scripts
    run_targets:
      - "//:debug"
      - "//test/rust_analyzer:rust_analyzer_test"

buildifier:
  version: latest
  warnings: "all"
